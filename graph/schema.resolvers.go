package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.81

import (
	"context"
	"fmt"

	"github.com/jefersonprimer/chatear-backend/graph/model"
)

// Register is the resolver for the register field.
func (r *mutationResolver) Register(ctx context.Context, input model.RegisterUserInput) (*model.AuthResponse, error) {
	panic(fmt.Errorf("not implemented: Register - register"))
}

// Login is the resolver for the login field.
func (r *mutationResolver) Login(ctx context.Context, input model.UserLoginInput) (*model.AuthResponse, error) {
	panic(fmt.Errorf("not implemented: Login - login"))
}

// Logout is the resolver for the logout field.
func (r *mutationResolver) Logout(ctx context.Context, refreshToken string) (*model.MessageResponse, error) {
	panic(fmt.Errorf("not implemented: Logout - logout"))
}

// RecoverPassword is the resolver for the recoverPassword field.
func (r *mutationResolver) RecoverPassword(ctx context.Context, input model.UserRecoverPasswordInput) (*model.MessageResponse, error) {
	panic(fmt.Errorf("not implemented: RecoverPassword - recoverPassword"))
}

// DeleteAccount is the resolver for the deleteAccount field.
func (r *mutationResolver) DeleteAccount(ctx context.Context, input model.UserDeleteAccountInput) (*model.MessageResponse, error) {
	panic(fmt.Errorf("not implemented: DeleteAccount - deleteAccount"))
}

// RecoverAccount is the resolver for the recoverAccount field.
func (r *mutationResolver) RecoverAccount(ctx context.Context, input model.UserRecoverAccountInput) (*model.AuthResponse, error) {
	panic(fmt.Errorf("not implemented: RecoverAccount - recoverAccount"))
}

// Me is the resolver for the me field.
func (r *queryResolver) Me(ctx context.Context) (*model.User, error) {
	panic(fmt.Errorf("not implemented: Me - me"))
}

// Mutation returns MutationResolver implementation.
func (r *Resolver) Mutation() MutationResolver { return &mutationResolver{r} }

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }
